<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netcoreapp3.0</TargetFramework>
  </PropertyGroup>

  <!-- This is to hide all the source files in VS to make the project cleaner,
       but also to include them in the build so that when the source is modified the build will rerun the C++ compiler. -->
  <ItemGroup>
    <Content Include="*.*">
      <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
      <Visible>false</Visible>
    </Content>
  </ItemGroup>

  <!-- Target to build the native project, the output goes directly to the bin directory -->
  <Target Name="BuildNativeProject" AfterTargets="Build">
    <PropertyGroup>
      <NativeBinDir>$(BinRoot)/$(Configuration)</NativeBinDir>
    </PropertyGroup>

    <Exec Command="g++ MarshallingSampleNative.cpp -Iinc -D LINUX -std=c++11 -o &quot;$(NativeBinDir)/MarshallingSampleNative&quot; -ldl -lnethost -Wl,-rpath,'$ORIGIN',--disable-new-dtags" ConsoleToMsBuild="true" Condition="$([MSBuild]::IsOsPlatform('Linux'))" />

    <Exec Command="g++ MarshallingSampleNative.cpp -Iinc -D OSX -std=c++11 -o &quot;$(NativeBinDir)/MarshallingSampleNative&quot; -ldl -lnethost -Wl,-rpath,'@loader_path'" ConsoleToMsBuild="true" Condition="$([MSBuild]::IsOsPlatform('OSX'))" />

    <Exec Command="cl.exe MarshallingSampleNative.cpp /I inc /D WINDOWS /EHsc /Od /GS /sdl /Zi /Fo&quot;$(NativeBinDir)\\&quot; /Fd&quot;$(NativeBinDir)\MarshallingSampleNative.pdb&quot; /link /DLL /out:&quot;$(NativeBinDir)\MarshallingSampleNative.dll&quot;" ConsoleToMsBuild="true" Condition="$([MSBuild]::IsOsPlatform('Windows'))" />
  </Target>
</Project>
